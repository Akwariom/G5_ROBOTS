/*
 * Gaits Auto-Generated by NUKE
 * Comm Protocol completely rebuit
 * 2019 AKWARIOM for Pulso.
 */

//___________________COMMUNICATION 
int index=-1;
unsigned char message[10];// maximum length of sendable message. Adjust to will
int checkSum;
String runMode="AUTO";


void setup(){
  pinMode(0,OUTPUT);
  // setup IK

  // setup serial
  Serial.begin(38400);

  // wait, then check the voltage (LiPO safety)

}

void loop(){
  //___________________________________________GET MESSAGE____________
  while(Serial.available())
  {
    unsigned char newChar=Serial.read();
    //digitalWrite(0,HIGH-digitalRead(0));//Turn Comm Led On
    //__________RECEIVED A 255 :  BEGINNING OF MESSAGE
    if(newChar == 0xff){
      index = 0;  
      checkSum=0;
    }
    //__________RECEIVED A 254 :  END OF MESSAGE
    else   if(newChar == 0xfe){
      index=100;      
    }
    else 
    {
      //_________________Received something else than a 0xff or 0fe, well, it's our data
      if(index>=0) {
        message[index] = (unsigned char) newChar;
        checkSum+=(int)  message[index];
        index++; //unused but maybe add to check messages if they appear to be wrong
      }
    }
  }//END SERIAL AVAILABLE

  //_________________________________________TREAT MESSAGE____________
  if(index==100) { //index==100, we received a new message that needs treating

    if(checkSum % 256 != 255) //Transmission Error
    {
      Serial.println("Transmission Error");
      index=-1;
    }
    else //Correct message received
    {
      updateHexapodParams();
      index=-1;
    }
    //
  }//END TREAT MESSAGE

  //_________________________________________ACTIONS TO BE LOOPED ____________

  if(runMode=="AUTO")
  {
    //  Serial.println("Auto");
    updateHexapodGaits();
  }
  else if(runMode=="MANU")
  {
    // Serial.println("Manual");
    //  updateHexapodPos();
  }
}




















/*
   
 
 
 
 
 
 String first3chars;
 
 
 
 
 
 
 for (int i = 0; i < 3; i++)
 {
 first3chars += Serial.read();
 }
 //_____________________________select gaits
 
 // _____________________________set movement speed
 if((command.walkV) > 5 || (command.walkV < -5) ){
 Xspeed = (multiplier*command.walkV)/2;
 }
 else
 {
 Xspeed = 0;
 }
 
 if((command.walkH) > 5 || (command.walkH < -5) ){   
 Yspeed = (multiplier*command.walkH)/2;
 }
 else
 {
 Yspeed = 0;
 }
 
 if((command.lookH) > 5 || (command.lookH < -5) ){
 Rspeed = -(command.lookH)/100.0;
 }
 else
 {
 Rspeed = 0;
 }
 
 // Use the phoenix code if you want pretty body rotation. :)    
 //
 //    if((command.buttons&BUT_LT) > 0){
 //      bodyRotY = (((float)command.lookV))/300.0;
 //      bodyRotZ = ((float)command.lookH)/300.0;  
 //      bodyRotX = ((float)command.walkH)/300.0;  
 //      Rspeed = 0;
 //      Xspeed = 0;
 //      Yspeed = 0;  
 //    }
 
 }
 
 // if our previous interpolation is complete, recompute the IK
 if(bioloid.interpolating == 0){
 doIK();
 bioloid.interpolateSetup(tranTime);
 }
 // update joints
 bioloid.interpolateStep();
 }
 */
















